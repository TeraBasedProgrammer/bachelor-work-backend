services:
  web:
    build: .
    command: >
      sh -c "alembic upgrade head &&
            fastapi run app/main.py --reload --host '0.0.0.0'"
    volumes:
      - ./app:/code/app
      - ./migrations:/code/migrations
    ports:
      - 8000:8000
    env_file:
      - ./.env
    networks:
      - local
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_started

  postgres:
    image: postgres:15
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - local

  # redis:
  #   image: redis:latest
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - local

  # celery:
  #   build:
  #     context: .
  #   env_file:
  #     - ./.env
  #   container_name: celery_app
  #   command: sh -c "celery -A app.core.tasks:celery worker --loglevel=INFO"
  #   networks:
  #     - local
  #   depends_on:
  #     - redis

  # flower:
  #   build:
  #     context: .
  #   env_file:
  #     - ./.env
  #   container_name: flower_app
  #   command: sh -c "celery -A app.core.tasks:celery flower"
  #   networks:
  #     - local
  #   depends_on:
  #     - redis
  #     - celery
  #   ports:
  #     - 8888:5555


networks:
  local:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
